pid /tmp/nginx.pid;
error_log /tmp/error.log;

events {
    worker_connections 1024;
}

http {
    client_max_body_size 200M;
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;
    access_log            /tmp/access.log;
    
    upstream fastapi {
        server 127.0.0.1:8000;
    }
    
    upstream streamlit {
        server 127.0.0.1:8501;
    }

    server {
            listen 80 default_server;
            server_name _;

            # Apply limits here too
            client_max_body_size 200M;
            client_body_buffer_size 50M;

            # Optional but helpful for uploads/timeouts
            client_body_timeout 300s;
            send_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

        # FastAPI routes
            location ^~ /api {
            client_max_body_size 200M;
            proxy_pass http://fastapi;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_request_buffering off;   # good for large POSTs
        }
        
            location = /read {
            client_max_body_size 200M;
            proxy_pass http://fastapi;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Streamlit app (default route)
        location / {
            client_max_body_size 200M;
            proxy_request_buffering off; 

            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Headers "Content-Type, X-Requested-With, X-Xsrftoken" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            if ($request_method = OPTIONS) {
                return 204;
            }
                    
            proxy_pass http://streamlit;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
            proxy_cookie_flags * SameSite=None secure;
        }
        
        # Streamlit WebSocket support
        location /_stcore/stream {
            proxy_pass http://streamlit;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
